
- when: "'exclude_when' not in package or not package.exclude_when|bool"
  block:
    - name: "{{package.repo}} - Check if repository exists"
      stat:
        path: "{{ source_path }}/{{package.repo}}"
      register: repo_path

    - name: "{{package.repo}} - Git clone"
      shell: "git clone --recursive {% if 'giturl' in package %}{{package.giturl}}{%else%}https://github.com/{{package.user}}/{{package.repo}}{% endif %}"
      args:
        chdir: "{{ source_path }}"
      when: not repo_path.stat.exists

    - when: (version == "stable" and ("noreleases" not in package or not package.noreleases)) or (version == "custom" and package.repo.lower() in customversion and customversion[package.repo.lower()] == "stable")
      block:
        - name: "{{package.repo}} - Get new git tags from remote"
          shell: "git fetch --tags"
          args:
            chdir: "{{ source_path }}/{{package.repo}}"
          changed_when: False

        - name: "{{package.repo}} - Get latest version tag"
          shell: "git tag -l | grep '^v' | sort -t. -k 1.2,1n -k 2,2n -k 3,3n -k 4,4n | tail -n 1 | tee .latest-release.lamachine"
          args:
            chdir: "{{ source_path }}/{{package.repo}}"
          register: latest_tag
          changed_when: False

        - block:
            - name: "{{package.repo}} - Checkout latest stable version {% if latest_tag is defined %}{{latest_tag.stdout}}{% endif %}"
              shell: "git checkout {{latest_tag.stdout}}"
              args:
                chdir: "{{ source_path }}/{{package.repo}}"
              environment: "{{lm_env}}"
              register: gitcheckout
              changed_when: '"Switched to branch" in gitcheckout.stdout'
          rescue:
            - name: "{{package.repo}} - STASHING AWAY LOCAL CHANGES!!!"
              shell: |
                echo "There appear to be local changes, LaMachine will stash them away">&2
                echo "this means they are not deleted and recoverable in principle,">&2
                echo "but they are NOT used in this compilation. You should ">&2
                echo "git add them properly if you want to use any custom changes">&2
                echo "... allowing for 15 second grace period (CTRL-C in case of panic)..."
                sleep 15
                git -c "user.name={{maintainer_name}}" -c "user.email={{maintainer_mail}}" stash -u
              args:
                chdir: "{{ source_path }}/{{package.repo}}"
              environment: "{{lm_env}}"
              when: '("untracked working tree files" in gitcheckout.stdout or "would be overwritten by merge" in gitcheckout.stderr or "commit or stash them" in gitcheckout.stderr) and allow_stash'
            - name: "{{package.repo}} - Checkout latest stable version {% if latest_tag is defined %}{{latest_tag.stdout}}{% endif %} (2nd attempt after stash)"
              shell: "git checkout {{latest_tag.stdout}}"
              args:
                chdir: "{{ source_path }}/{{package.repo}}"
              environment: "{{lm_env}}"
              register: gitcheckout
              changed_when: '"Switched to branch" in gitcheckout.stdout'

        - name: "{{package.repo}} - Checking whether codemeta.json is provided (stable)"
          stat:
            path: "{{ source_path }}/{{package.repo}}/codemeta.json"
          register: have_codemeta
          changed_when: False

        - name: "{{package.repo}} - Register (stable)"
          include_role:
             name: lamachine-register
          vars:
             codemeta: "{% if have_codemeta.stat.exists %}{{ source_path }}/{{package.repo}}/codemeta.json{% endif %}"
             metadata_defaults: #'metadata' by caller takes presendence over defaults
               identifier: "{{package.repo|lower}}"
               name: "{{package.repo}}"
               codeRepository: "{% if 'giturl' in package %}{{package.giturl}}{%else%}https://github.com/{{package.user}}/{{package.repo}}{% endif %}"
               version: "{{ latest_tag.stdout }}"
               producer: "{% if 'user' in package %}{% if 'repo' in package and package.repo in github_knawhuc_projects %}{{metadata_producer_clst}}{% elif package.user in github_clst_users %}{{metadata_producer_clst}}{% else %}{{metadata_producer_unknown}}{% endif %}{% else %}{{metadata_producer_unknown}}{% endif %}"
          when: "do_registration is defined and do_registration"

    - when: version == "development" or (version == "stable" and ("noreleases" in package and package.noreleases)) or (version == "custom" and package.repo.lower() in customversion and customversion[package.repo.lower()] == "development")
      block:
        - block:
            - name: "{{package.repo}} - Checkout latest {% if 'git_branch' in package %}{{ package.git_branch }}{% else %}master{% endif %} version of (development)"
              shell: "git checkout {% if 'git_branch' in package %}{{ package.git_branch }}{% else %}master{% endif %} && git pull"
              args:
                chdir: "{{ source_path }}/{{package.repo}}"
              register: gitcheckout
              changed_when: '("Switched to branch" in gitcheckout.stdout) or ("files changed" in gitcheckout.stdout)'
          rescue:
            - name: "{{package.repo}} - STASHING AWAY LOCAL CHANGES!!!"
              shell: |
                echo "There appear to be local changes, LaMachine will stash them away">&2
                echo "this means they are not deleted and recoverable in principle,">&2
                echo "but they are NOT used in this compilation. You should ">&2
                echo "git add them properly if you want to use any custom changes">&2
                echo "... allowing for 15 second grace period (CTRL-C in case of panic)..."
                sleep 15
                git -c "user.name={{maintainer_name}}" -c "user.email={{maintainer_mail}}" stash -u
              args:
                chdir: "{{ source_path }}/{{package.repo}}"
              environment: "{{lm_env}}"
              when: '("untracked working tree files" in gitcheckout.stdout or "would be overwritten by merge" in gitcheckout.stderr or "commit or stash them" in gitcheckout.stderr) and allow_stash'
            - name: "{{package.repo}} - Checkout latest {% if 'git_branch' in package %}{{ package.git_branch }}{% else %}master{% endif %} version of (development, second attempt after stash)"
              shell: "git checkout {% if 'git_branch' in package %}{{ package.git_branch }}{% else %}master{% endif %}&& git pull"
              args:
                chdir: "{{ source_path }}/{{package.repo}}"
              environment: "{{lm_env}}"
              register: gitcheckout
              changed_when: '("Switched to branch" in gitcheckout.stdout) or ("files changed" in gitcheckout.stdout)'

        - name: "{{package.repo}} - Get latest commit hash"
          shell: "git describe --tags || git rev-parse HEAD"
          args:
            chdir: "{{ source_path }}/{{package.repo}}"
          register: latest_commit
          changed_when: False

        - name: "{{package.repo}} - Checking whether codemeta.json is provided (unreleased)"
          stat:
            path: "{{ source_path }}/{{package.repo}}/codemeta.json"
          register: have_codemeta
          changed_when: False

        - name: "{{package.repo}} - Register (unreleased)"
          include_role:
             name: lamachine-register
          vars:
             codemeta: "{% if have_codemeta.stat.exists %}{{ source_path }}/{{package.repo}}/codemeta.json{% endif %}"
             metadata_defaults: #'metadata' by caller takes presendence over defaults
               identifier: "{{package.repo|lower}}"
               name: "{{package.repo}}"
               codeRepository: "{% if 'giturl' in package %}{{package.giturl}}{%else%}https://github.com/{{package.user}}/{{package.repo}}{% endif %}"
               version: "{{ latest_commit.stdout }}"
               producer: "{% if 'user' in package %}{% if 'repo' in package and package.repo in github_knawhuc_projects %}{{metadata_producer_clst}}{% elif package.user in github_clst_users %}{{metadata_producer_clst}}{% else %}{{metadata_producer_unknown}}{% endif %}{% else %}{{metadata_producer_unknown}}{% endif %}"
          when: "do_registration is defined and do_registration"

    - when: version == "custom" and package.repo.lower() in customversion and customversion[package.repo.lower()] != "stable" and customversion[package.repo.lower()] != "development"
      block:
        - name: "{{package.repo}} - Checkout custom version: {{customversion[package.repo.lower()]}}"
          shell: "git checkout {{customversion[package.repo.lower()]}}"
          args:
            chdir: "{{ source_path }}/{{package.repo}}"
          register: gitcheckout
          changed_when: '("Switched to branch" in gitcheckout.stdout) or ("files changed" in gitcheckout.stdout)'

        - name: "{{package.repo}} - Checking whether codemeta.json is provided (custom)"
          stat:
            path: "{{ source_path }}/{{package.repo}}/codemeta.json"
          register: have_codemeta
          changed_when: False

        - name: "{{package.repo}} - Register (custom)"
          include_role:
             name: lamachine-register
          vars:
             codemeta: "{% if have_codemeta.stat.exists %}{{ source_path }}/{{package.repo}}/codemeta.json{% endif %}"
             metadata_defaults: #'metadata' by caller takes presendence over defaults
               identifier: "{{package.repo|lower}}"
               name: "{{package.repo}}"
               codeRepository: "{% if 'giturl' in package %}{{package.giturl}}{%else%}https://github.com/{{package.user}}/{{package.repo}}{% endif %}"
               version: "{{ customversion[package.repo.lower()] }}"
               producer: "{% if 'user' in package %}{% if 'repo' in package and package.repo in github_knawhuc_projects %}{{metadata_producer_clst}}{% elif package.user in github_clst_users %}{{metadata_producer_clst}}{% else %}{{metadata_producer_unknown}}{% endif %}{% else %}{{metadata_producer_unknown}}{% endif %}"
          when: "do_registration is defined and do_registration"
