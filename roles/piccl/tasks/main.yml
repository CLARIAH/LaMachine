---


    - name: Check for unsupported OS for PICCL
      debug:
        msg: "PICCL is not supported on Mac OS X"
      when: ansible_distribution|lower == "macosx"

    - name: Installing global dependencies for PICCL #note that tesseract is a seperate role
      include_role:
        name: lamachine-package-install
      with_items:
        - { debian: poppler-utils, redhat: poppler-utils, arch: poppler } #should already be installed earlier but no harm in making it explicit here anyway
        - { debian: imagemagick, redhat: ImageMagick, arch: imagemagick }
        - { debian: perl, redhat: perl, arch: perl }
      loop_control:
          loop_var: package

    - name: Installing djvulibre (except for CentOS 8)
      include_role:
        name: lamachine-package-install
      with_items:
        - { debian: djvulibre-bin, redhat: djvulibre, arch: djvulibre }
        - { debian: libdjvulibre-text }
      loop_control:
          loop_var: package
      when: not ((ansible_distribution|lower == "centos" or ansible_distribution|lower == "rhel") and ansible_distribution_major_version|int == 8)

    - name: Installing optional global dependencies for PICCL
      include_role:
        name: lamachine-package-install
      vars:
        package:
          debian: "tesseract-ocr-deu-frak" #not present in Ubuntu 18.04 anymore (#117)
          redhat: tesseract-langpack-deu_frak
          arch: tesseract-data-deu_frak
          ignore_errors: yes #not present on all distros so allow failure
      when: not (ansible_distribution|lower == "ubuntu" and ansible_distribution_version|string >= "18.04")

    - name: Installing TICCLtools
      include_role:
        name: lamachine-git-autoconf
      vars:
        package:
          repo: ticcltools
          user: LanguageMachines
          build_environment:
             CXXFLAGS: "-D U_USING_ICU_NAMESPACE=1"

    - name: Install PICCL
      include_role:
        name: lamachine-git
      vars:
        package:
          user: LanguageMachines
          repo: PICCL
        do_registration: true

    - name: "Symlink PICCL in {{lm_prefix}}/opt"
      file:
        src: "{{source_path}}/PICCL"
        dest: "{{lm_prefix}}/opt/PICCL"
        state: link

    - name: Make PICCL nextflow scripts available in environment
      shell: |
        cp -sf {{lm_prefix}}/opt/PICCL/*.nf .
      args:
        chdir: "{{lm_prefix}}/bin"


    - name: "Download data and example corpora for PICCL"
      shell: |
        if [ ! -d data ]; then
          ./download-data.nf
        fi
        if [ ! -d corpora ]; then
          ./download-examples.nf
        fi
      args:
        chdir: "{{lm_prefix}}/opt/PICCL"
      environment: "{{lm_env}}"

    - when: webserver and ("piccl" in services or "all" in services) and ('piccl' not in remote_services or not remote_services.piccl)
      block:
        - name: Detect current PICCL branch or tag
          shell: "git describe --tags || git rev-parse HEAD"
          register: current_piccl_branch_or_tag
          args:
            chdir: "{{source_path}}/PICCL"

        - name: Installing PICCL webservice
          include_role:
            name: lamachine-python-install
          vars:
            package:
              github_user: "LanguageMachines"
              github_repo: "PICCL"
              setupdir: "webservice" #setup.py is in this subdir
              git_branch: "{{ current_piccl_branch_or_tag.stdout }}"
            do_registration: false #we register entrypoints manually:

        - name: Registering PICCL webservice entrypoints
          include_role:
            name: lamachine-register
          vars:
            update: piccl
            metadata:
              identifier: piccl
              entryPoints:
                - { "@type": "EntryPoint", urlTemplate: "{{lm_base_url}}/piccl", interfaceType: "WUI" }
                - { "@type": "EntryPoint", urlTemplate: "{{lm_base_url}}/piccl", specification: "{{lm_base_url}}/piccl/info",  interfaceType: "REST" }

        - name: Installing web service
          include_role:
            name: lamachine-web-install
          vars:
            service:
              nginx: piccl
              clam: piccl
              uwsgi: piccl
