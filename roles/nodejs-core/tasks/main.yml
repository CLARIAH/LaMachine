---

  - when: root or locality == "global"
    block:
      - name: Add NodeSource repository (Debian/Ubuntu)
        become: yes
        become_user: root
        shell: bash <(curl -sL https://deb.nodesource.com/setup_lts.x)
        args:
            executable: /bin/bash
        when: ansible_distribution|lower == "ubuntu" or ansible_distribution|lower == "debian" or ansible_distribution|lower == "linux mint"

      - name: Add NodeSource repository (RedHat EL/CentOS/Fedora)
        become: yes
        become_user: root
        shell: bash <(curl -sL https://rpm.nodesource.com/setup_lts.x)
        args:
            executable: /bin/bash
        when: ansible_distribution|lower == "rhel" or ansible_distribution|lower == "centos" or ansible_distribution|lower == "redhat" or ansible_distribution|lower == "fedora"

  - name: Installing NodeJS
    include_role:
      name: lamachine-package-install
    with_items:
      - { debian: nodejs, redhat: nodejs, arch: nodejs, homebrew: node }
      - { arch: npm } #included in nodejs with the others
    loop_control:
       loop_var: package
    when: root

  - name: Create node_modules directory
    become: "{{lm_become}}"
    become_user: root
    file:
        path: "{{ lm_prefix }}/node_modules"
        state: directory
        owner: "{{unix_user}}"
        group: "{{unix_group}}"
        mode: u+rwx,g+rwsx,a+rx

  - name: "Creating dummy package lock file"
    become: "{{lm_become}}"
    become_user: root
    copy:
      dest: "{{lm_prefix}}/package-lock.json"
      content: "{}"
      mode: u+rw,g+rw,a+r

  - when: locality == "local" and not root
    block:
      - name: Obtaining NVM
        include_role:
          name: lamachine-git
        vars:
          package:
            user: creationix
            repo: nvm

      - name: "Adding activation script for NVM"
        copy:
          dest: "{{lm_prefix}}/bin/activate.d/nvm.sh"
          content: |
            #!/bin/bash
            export NVM_DIR={{lm_prefix}}/src/nvm
            if [ -z "$SKIP_NVM" ]; then
              source $NVM_DIR/nvm.sh || true
              nvm use stable || true
            fi
          mode: u+rwx,a+rx

      - name: Installing NodeJS through NVM
        shell: |
          source $NVM_DIR/nvm.sh
          nvm install stable
        args:
            executable: /bin/bash
        environment:
          NVM_DIR: "{{lm_prefix}}/src/nvm"

      - name: Create NVM alias directory
        file:
          path: "{{ lm_prefix }}/src/nvm/alias"
          state: directory

      - name: Set NodeJS default version for NVM
        copy:
          dest: "{{ lm_prefix }}/src/nvm/alias/default"
          content: "stable"

      - name: Ensuring npm is up to date
        include_role:
          name: lamachine-run
        vars:
          command: npm i -g npm@latest
          chdir: "{{ source_path }}"
        ignore_errors: yes






